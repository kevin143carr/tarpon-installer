><###>TARPON INSTALLER<###><

THIS PROGRAM IS RUN FROM AN ELEVATED DOS COMMAND PROMPT:  (You must be an administrator)
usage:  tarpon_installer config.ini (or any name of config.ini type file)
usage:  tarpon_installer winconfig.ini (or any name of config.ini type file)

Tarpon installer is an open source installation creator geared towards
Linux, but has been adapted for windows.  It gives the users
big flexibility in the development of an install script.

The Tarpon Installer consists of:
tarpon_installer.exe - Windows Exe
config.ini - sample config file for RHEL/CentOS 7
getpackage.sh - copies packages from a RHEL/CentOS 7 system and stores it in a local repo.
installpkg.sh - installs packages from a local repo.

The Key to using Tarpon Installer is preparation.  Here are the steps one should take when
building an install script.
{LINUX ONLY}
1. Download the RPMs you going to use:
	use the getpackage.sh to download the RPMs you will need.  In the case of CentOS 7 you
	will need these packages at a minimum.
	1.	Unzip package because RHEL/CentOS only comes with a gunzip, which is not capable of unzipping standard zip files.
	2.	Java – in case you have a Java use.
	3.	In the example we add postgres12
	4.	In the example we add httpd
	5.	Compress the repo on the RHEL/CentOS machine using – tar cvfz repo.tar.gz repo/  look at our repo.tar.gz for an example
	6.	List the RPMs in the RPM section.  The key is the name, the value is the actual RPM.
2.  Add the username/password and host in the top of the ini file where designated.

{LINUX AND WINDOWS}
3.  [FILES] Next you will need add the files you want to copy in the resources folder.
	1.  Use the [FILES] section for the copying of files.
	2.  If the destination directory does not exists, it will create it.
	3.  {REMOTE MODE} Any subdirectories under the destination will need to be made using a .zip file.
		(meaning that the sub-directories will need to be in the zip file).
	4.  {LOCAL MODE} Zip files subdirectories will be create in the location specified.  Example: myfile.zip = c:/space/support/turkey
	5.  You can copy and rename a file at the same time example: master.txt = c:/space/support/newnamed.txt
4.  [ACTIONS].  Allow you to manipulate files, make OS changes and anything that can be done from a Linux or windows command console.  
	Follow the examples given.
5.  [MODIFY] – {LINUX ONLY} is a limited file editor where you specify the item number – file = whattofind||replacewith
	1.  It cannot handle some characters due to using Regex style find and replace.  I know that slashes and single quotes
		can be tricky.
6.  [FINAL] is just like actions, but it gives you one more chance to wrap things up.  I use it for enabling some services, 
	as well as getting status from services and rebooting.