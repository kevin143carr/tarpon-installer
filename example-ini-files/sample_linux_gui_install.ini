## ><###> Tarpon Installer <###>< is an open source install creator.
## This tool has been made open source under the MIT Licensing Agreement.
## Feel free to use, modify and distribute
## as needed, as long as this banner remains in place

## The order of the items below is the order by which this program executes.
## Use getpackage.sh on a linux machine to download repos locally!
## The installer will use the installpkg.sh to install the selected RPMs
## Make sure the installpkg.sh is in your resource folder.
## The resources folder can be either in a relative or specified folder

# Version 1.0.0.0

[STARTUP]
## The logo or image that will be displayed in the left pane
logoimg = example-ini-files/just-an-owl-md.png
## Title bar text on top of the window
installtitle = Linux GUI test installer
## startup description that will go someplace at sometime
startupinfo = "This will install on a Linux Machine"
## What you want the button to say to start the install.
buttontext = Begin Install
## Use True or False for watchdog Capital Case
watchdog = False
## If this install requires admin or root privelages
adminrights = False

[USERINFO] # Information needed to login into the machine
username = 
password = 

[SERVERCONFIG] # ip address information
host = 

[BUILD] # buildtype:(WINDOWS OR LINUX) -- installtype:(LOCAL OR REMOTE) -- resources:example shows relative folder
buildtype = LINUX
installtype = LOCAL
resources = resources

[USERINPUT]
useripaddress = Enter your IP address here
username = your name here
dogsname = your dogs name here
catsname = your cats name here
ratsname = your rats name here
dogsname1 = your dogs name here1
catsname2 = your cats name here2
ratsname3 = your rats name here3

[VARIABLES]
userdatafolder = c:\userdata\
databaseip = 172.16.20.25

[OPTIONS]
optionmakeadirectory = Create a directory in your home folder
optionpopupmessagelater = Popup a message to you later

[REPO] # NO LONGER SUPPORTED

[RPM] #RPMs (name/command) that need to be installed prior to softare installation
#RPMS START HERE
#RPMS END HERE

[FILES] # Copies files to the paths and unzips if necessary
# if a specified directory does not exists it will create it.
# It will not create sub directories, so your subs need to be part of your .zip file
#BUILDS START HERE
#BUILDS END HERE

[ACTIONS] # Actions executed at the command level
actionechothis = echo "Hello, It's been a while %username%"
optionmakeadirectory = echo creating new directory
optionpopupmessagelater = YESNO::Do you fee like I do::echo yes
checkvariable1 = MSGBOX::"Does this make sense: %userdatafolder%"
checkuserinput1 = MSGBOX::"User input says this: %username%"
checkpopliststring = POPLIST::Please Choose a User Type::INPUTLIST::Admin,Root,SuperUser,User,Lowlife::checkpopliststringvalue
checkpoplistfile = POPLIST::Please Choose a User Type::INPUTFILE::example-ini-files/samplecsvfile.txt::checkpoplistfilevalue
checkifgotocommand = IFGOTO::test -d "/usr/bin"::test4
test1 = echo test 1
test2 = echo test 2
test3 = echo test 3
test4 = MSGBOX::"You made it to TEST4"

#NOW WE CAN USE THE VARIABLES CREATED BY THE POPLIST
verifypopliststring = MSGBOX::Ths came from the POPLIST with INPUTLIST: %checkpopliststringvalue%
verifypoplistfile = MSGBOX::Ths came from the POPLIST with INPUTFILE: %checkpoplistfilevalue%

[MODIFY] #Used to modify files usage: (number-){FILE}filepath+filename{CHANGE} = keyword||replaceword (this only works in strings without "", /, \)
1 = {FILE}/%pgdatalocation%/postgresql.conf{CHANGE}#listen_addresses = 'localhost'||listen_addresses = '*'

[FINAL] # Same as Actions but is the last things done

