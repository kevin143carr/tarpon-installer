## ><###> Tarpon Installer <###>< is an open source install creator.
## This tool has been made open source under the MIT Licensing Agreement.
## Feel free to use, modify and distribute
## as needed, as long as this banner remains in place

## The order of the items below is the order by which this program executes.
## Use getpackage.sh on a linux machine to download repos locally!
## The installer will use the installpkg.sh to install the selected RPMs
## The resources folder can be either in a relative or specified folder

[USERINFO] # Information needed to login into the machine
username = root
password = poiu0987POIU)(*&

[SERVERCONFIG] # ip address information
host = 172.16.20.208

[BUILD] # buildtype:(WINDOWS OR LINUX) -- installtype:(LOCAL OR REMOTE) -- resources:example shows relative folder
buildtype = LINUX
installtype = REMOTE
resources = resources/

[REPO] # Files that support the RPMS
repo.tar.gz = /root/repo
installpkg.sh = /root

[RPM] #RPMs (name/command) that need to be installed prior to softare installation
unzip = unzip
postgresql-12 = postgresql12-server
httpd = httpd
java = java

[FILES] # Copies files to the paths and unzips if necessary
# if a specified directory does not exists it will create it.
# It will not create sub directories, so your subs need to be part of your .zip file
activemq.zip = /opt/activemq
activemq.service = /usr/lib/systemd/system
datacollectormanager.zip = /opt/datacollectormanager
webconfigurationmanager.zip = /opt/webconfigurationmanager
jaarliveservice.zip = /opt/jaarliveservice
webapiservice.zip = /opt/webapiservice
jaardashboard.zip = /var/www/html/jaar
jaardcm.service = /etc/systemd/system
jaardslive.service = /etc/systemd/system
jaardswebapi.service = /etc/systemd/system
jaarwcm.service = /etc/systemd/system
jaardiscollector.service = /etc/systemd/system
2021_08_03_07_01_00_DISCollector_rhel_3_2_7_200.zip=/opt/discollector
httpd.conf = /etc/httpd/conf
jaar.conf = /etc/httpd/conf.d
config.json = /var/www/html/jaar/dashboard/assets
jtdb-3.2.7_INSERTS.sql = /var/lib/pgsql/12
jaarsys-3.2.7_INSERTS.sql = /var/lib/pgsql/12
users.sql = /var/lib/pgsql/12
index.html = /var/www/html/jaar/dashboard
postgres_contrib.zip = /usr/pgsql-12/share
postgres_extension.zip = /usr/pgsql-12/share
postgres_lib.zip = /usr/pgsql-12

[ACTIONS] # Actions executed at the command level
updatehost1 = echo '%host% jaar-svr01' >> /etc/hosts
updatehost2 = echo '%host% jaar-svr02' >> /etc/hosts
createproductsfolder = mkdir /products
createmanifestsfolder = mkdir /products/manifests
createBINDERSfolder = mkdir /products/BINDERS
createJAARBINDERfolder = mkdir /products/BINDERS/JAAR
cleandcmzip = rm -f /opt/datacollectormanager/datacollectormanager.zip
cleanwcmzip = rm -f /opt/webconfigurationmanager/webconfigurationmanager.zip
cleanlivezip = rm -f /opt/jaarliveservice/jaarliveservice.zip
cleanwebapizip = rm -f /opt/webapiservice/webapiservice.zip
cleanrepo = rm -rf /root/repo
cleanrpminstaller = rm -f /root/installpkg.sh
enablehttpd = systemctl enable httpd
starthttpd = systemctl start httpd
enablepostgres = systemctl enable postgresql-12.service
clearpostgres = rm -rf /var/lib/pgsql/12/data/
initializepostgres = postgresql-12-setup initdb
update_pg_hba.conf = echo 'host	all		all		172.16.20.0/24		password' >> /var/lib/pgsql/12/data/pg_hba.conf
startpostgres = systemctl start postgresql-12
changepostgrespassworkd = sudo -u postgres psql -c "ALTER USER postgres PASSWORD 'postgres'"
addfdwtopostgres = sudo -u postgres psql -c "CREATE EXTENSION postgres_fdw"
updatepostgresfilepermissions = chown postgres.postgres /var/lib/pgsql/12/*
addpostgresusers =  sudo -u postgres psql -f /var/lib/pgsql/12/users.sql
createjaarsys = sudo -u postgres psql -f /var/lib/pgsql/12/jaarsys-3.2.7_inserts.sql
createjtdb =  sudo -u postgres psql -f /var/lib/pgsql/12/jtdb-3.2.7_inserts.sql
setdcmpermissions = chmod -R 777 /opt/datacollectormanager
setwcmpermissions = chmod -R 777 /opt/webconfigurationmanager
setlivepermissions = chmod -R 777 /opt/jaarliveservice
setwebapipermissions = chmod -R 777 /opt/webapiservice
setdiscollectorpermissions = chmod -R 777 /opt/discollector
setactivemqpermissions = chmod 775 /opt/activemq/bin/activemq
enabledcm = systemctl enable jaardcm
startdcm = systemctl start jaardcm
enablelive = systemctl enable jaardslive
startlive = systemctl start jaardslive
enablewebapi = systemctl enable jaardswebapi
startwebapi = systemctl start jaardswebapi
enablewcm = systemctl enable jaarwcm
startwcm = systemctl start jaarwcm
enableactivemq = systemctl enable activemq
startactivemq = systemctl start activemq
enablejaardiscollector = systemctl enable jaardiscollector
startjaardiscollector = systemctl start jaardiscollector
stopfirewall = systemctl stop firewalld
disablefirewall = systemctl disable firewalld

[MODIFY] #Used to modify files usage: (number-)filepath+filename = keyword||replaceword (this only works in strings without "", /, \)
1-/var/lib/pgsql/12/data/postgresql.conf = #listen_addresses = 'localhost'||listen_addresses = '*'
2-/var/lib/pgsql/12/data/postgresql.conf = log_timezone =||log_timezone = 'UTC' #changed#
3-/opt/webconfigurationmanager/appsettings.json = localhost:55001||*:55001

[FINAL] # Same as Actions but is the last things done
stoppostgres = systemctl stop postgresql-12
startpostgres = systemctl start postgresql-12
statusjaardcm = systemctl status jaardcm | grep Active:
statusjaarwcm = systemctl status jaarwcm | grep Active:
statusjaardslive = systemctl status jaardslive | grep Active:
statusjaarwebapi = systemctl status jaarwebapi | grep Active:
statusjaardiscollector = systemctl status jaardiscollector | grep Active:
statusactivemq = systemctl status activemq | grep Active:
statushttpd = systemctl status httpd | grep Active:
statuspostgres = systemctl status postgresql-12 | grep Active:
statusfirewalld = systemctl status firewalld | grep Active:
rebootmachine = echo "********* FINISHED AND REBOOTING IN 10 SECONDS *********" ; sleep 10 ; reboot

